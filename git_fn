#!/usr/bin/env bash

# Automate git add & commit & push
function rocket (){
	current_branch=$(git rev-parse --abbrev-ref HEAD)
	human_branch_title=$(echo $current_branch | sed 's/-/ /g;s/ bug / [bug] /;s/ reopened / [reopened] /')
	git add *
	if [ -z "$1" ]
	then
		git commit -m $human_branch_title
	else
		git commit -m $1
	fi
	git push --set-upstream origin $current_branch
}

# Create new Branch from DEV Branch
function cb () {
        git checkout master
        git pull
        git checkout -b $1
}

# Change Branch and Start
function cbs () {
        cb $1
        npm run dev
}

# Move into another Branch
function co () { git checkout $1; }

# Find branch in local Branches; if one branch founded, switch branch to that
function fb () {
	LOG_FILE=.git_branches.log
	BRANCH_NOT_FOUND="Branch with name '"$1"' not found!"
	ARGUMENT_NOT_FILLED="Name of branch must be filled!"	
	
	# handle empty argument
	if [ -z $1 ]
	then 
		echo $ARGUMENT_NOT_FILLED
		return 0
	fi
	
	# find local branches, grep with argument, save to file
	git branch | grep $1 &> $LOG_FILE
	
	if ! [ -s $LOG_FILE ]
	then
		echo $BRANCH_NOT_FOUND
		return 0
	fi

	# get number of lines
	lines=$(wc -l $LOG_FILE | sed "s/ //g;s/$LOG_FILE/ $LOG_FILE/g" | cut -f 1 -d ' ')
	
	# if just one, change branch to it
	if [[ $lines -eq 1 ]]
	then
		git checkout $(head -1 $LOG_FILE)
	fi

	# cat other lines
	cat $LOG_FILE
	# TODO: add line numbers options to choose	

	# delete file
	rm $LOG_FILE
}

# Delete lastly created local Branch
function dellastlocal () { git branch -d "@{-1}"; }

# Full Rebase proccess on DEV Branch
function reb (){
        git checkout master
        git pull
        git checkout -
        git rebase master &> .git_rebase_status.log
	linenumber=$(sed -n '/Successfully/=' .git_rebase_status.log)
	line=$(sed "${linenumber}q;d" .git_rebase_status.log)
	if [[ $line == *"Successfully rebased and updated"* ]];
	then
		git push -f && echo "Successfully pushed to parent."
	else
		cat .git_rebase_status.log
	fi
	rm .git_rebase_status.log
}

# Quick Rebase - jump into branch, rebase and if w/o conflicts, go back to master
function qreb() {
	co $1
	output=reb
	echo $output
}

# Fix CRLF Problem (usually Windows to MacOS)
function crlf (){
        git config core.autocrlf false
        git rm --cached -r .
        git reset --hard
}
